# Generated by Django 3.1.3 on 2020-11-08 12:31

from django.db import migrations, models
import django.db.models.deletion
import sharednote.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_number', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('department_name', models.CharField(max_length=50)),
                ('term', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.TextField()),
                ('up_votes', models.IntegerField(default=0)),
                ('down_votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=120)),
                ('lion_mail', models.EmailField(max_length=254, validators=[sharednote.models.validate_lion_mail])),
                ('avartar', models.CharField(max_length=200)),
                ('credits', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.BooleanField()),
                ('note_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.note')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.user')),
            ],
        ),
        migrations.CreateModel(
            name='Commented',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('comment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.comment')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.user')),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('course_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.course')),
                ('note_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.note')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.user')),
            ],
            options={
                'unique_together': {('user_id', 'note_id', 'course_number')},
            },
        ),
        migrations.CreateModel(
            name='CourseNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.course')),
                ('note_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sharednote.note')),
            ],
            options={
                'unique_together': {('course_number', 'note_id')},
            },
        ),
    ]
